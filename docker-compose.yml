version: '3.6'
services:
  hotspotplusapi:
    build:
      context: ${PWD}/api
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    container_name: apihotspotplus
    command: npm run start:dev
    ports:
      - 3000:3000
    depends_on:
      - mongodb
      - elasticsearch
#      - rabbitmq
      - redis
    env_file:
      - api/.env
    volumes:
      - ${PWD}/systemId:/systemId
      - ${PWD}/api/server:/usr/src/app/server/
      - ${PWD}/api/node_modules:/usr/src/app/node_modules
      - ${PWD}/api/common:/usr/src/app/common/
      - ${PWD}/api/logs:/logs
      - ${PWD}/api/key:/key
    networks:
      - hotspotplusgate
  hotspotpluslicensapi:
    build:
      context: ${PWD}/api-license
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    container_name: hotspotpluslicensapi
    command: npm run start:dev
    ports:
      - 3001:3000
    depends_on:
      - mongodb
      - elasticsearch
      - redis
    env_file:
      - api-license/.env
    volumes:
      - ${PWD}/api-license/server:/usr/src/app/server/
      - ${PWD}/api-license/node_modules:/usr/src/app/node_modules
      - ${PWD}/api-license/common:/usr/src/app/common/
      - ${PWD}/api-license/logs:/logs
      - ${PWD}/api-license/key:/key
    networks:
      - hotspotplusgate
  logworker:
    build:
      context: ./log-worker
    user: '${UID:-1000}:${GID:-1000}'
    command: npm run start:dev
    depends_on:
      - rabbitmq
    environment:
      - LOG_REQUEST_RETRY_MS=300000
      - API_ADDRESS=http://hotspotplusapi:3000
      - SERVICE_MAN_USERNAME=pinTimeServiceMan
      - SERVICE_MAN_PASSWORD=#123aaa)
      - RABBITMQ_USERNAME=payam
      - RABBITMQ_PASSWORD=123
      - REDIS_PORT=6379
      - REDIS_HOST=hsp_redis
      - ELASTIC_INDEX_PREFIX=hotspotplus
      - ELASTIC_IP=hsp_elasticsearch
      - ELASTIC_PORT=9200
      - LOG_LEVEL=debug
      - LOG_PATH=/logs/log-worker.log
    volumes:
      - ${PWD}/log-worker/dist/log.worker.js:/usr/src/app/log.worker.js
      - ${PWD}/log-worker/node_modules:/usr/src/app/node_modules
      - ${PWD}/log-worker/logs:/logs
    networks:
    - hotspotplusgate
  rabbitmq:
    image: 'bitnami/rabbitmq:3.7.10-ol-7-r2'
    ports:
      - 15672:15672
    container_name: rabbitmq
    environment:
      - RABBITMQ_USERNAME=payam
      - RABBITMQ_PASSWORD=123
    volumes:
      - hsp_rabbitmq:/bitnami
    networks:
      - hotspotplusgate
#  logaggregator:
#    build:
#      context: ${PWD}/log-aggregator
#    user: '${UID:-1000}:${GID:-1000}'
#    restart: always
#    command: npm start
#    depends_on:
#      - elasticsearch
#      - redis
#    env_file:
#      - ${PWD}/log-aggregator/.env
#    volumes:
#      - ${PWD}/log-aggregator/src/:/usr/src/app/src/
#      - ${PWD}/log-aggregator/index.js:/usr/src/app/index.js
#      - ${PWD}/log-aggregator/node_modules/:/usr/src/app/node_modules/
#      - ${PWD}/log-aggregator/logs:/logs
#    networks:
#      - hotspotplusgate
  dashboard:
    image: 'bitnami/nginx:latest'
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ${PWD}/dashboard:/app
    networks:
      - hotspotplusgate
  hotspot:
    build:
      context: ${PWD}/api
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    command: npm start
    ports:
    - 8081:8070
    volumes:
    - ${PWD}/hotspot/:/usr/src/app/
    networks:
    - hotspotplusgate
#  licensedashboard:
#    image: 'bitnami/nginx:latest'
#    restart: always
#    ports:
#      - 8082:8080
#    volumes:
#      - ${PWD}/license-dashboard:/app
#    networks:
#      - hotspotplusgate
  coordinator:
    build:
      context: ${PWD}/coordinator
    user: '${UID:-1000}:${GID:-1000}'
    command: npm start
    restart: always
    env_file:
      - ${PWD}/coordinator/.env
    depends_on:
      - redis
      - hotspotpluslicensapi
    environment:
      - LOG_LEVEL=debug
      - LOG_DIR=/logs
      - REDIS_PORT=6379
      - REDIS_HOST=hsp_redis
      - REDIS_IP=hsp_redis
    volumes:
      - ${PWD}/coordinator/src/:/usr/src/app/src/
      - ${PWD}/coordinator/node_modules/:/usr/src/app/node_modules/
      - ${PWD}/systemId:/systemId
      - ${PWD}/coordinator/key:/key
      - ${PWD}/coordinator/logs:/logs
    networks:
      - hotspotplusgate
  mongodb:
    container_name: hsp_mongodb
    image: bitnami/mongodb:3.6.8-ol-7-r100
    restart: always
    volumes:
      - hsp_mongodb:/bitnami
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hotspotplusgate
  redis:
    image: bitnami/redis:4.0.12-debian-9-r11
    container_name: hsp_redis
    restart: always
    volumes:
      - hsp_redis:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hotspotplusgate
  elasticsearch:
    container_name: hsp_elasticsearch
    image: 'bitnami/elasticsearch:6.6.0'
    restart: always
    environment:
      - ELASTICSEARCH_HEAP_SIZE=1024m
    expose:
      - "9300"
      - "9200"
    ports:
      - 9200:9200
    volumes:
      - hsp_elasticsearch:/bitnami/elasticsearch
    networks:
      hotspotplusgate:
         ipv4_address: 172.20.0.20
#  kibana:
#    image: 'bitnami/kibana:6.5.4'
#    ports:
#      - 5601:5601
#    environment:
#      - KIBANA_ELASTICSEARCH_URL=hsp_elasticsearch
#    volumes:
#      - 'hsp_kibana:/bitnami'
#    networks:
#      hotspotplusgate:
#       ipv4_address: 172.20.0.21
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    restart: always
#    container_name: 'hsp_zookeeper'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    expose:
#      - '2181'
#    networks:
#      - hotspotplusgate
#  kafka:
#    image: 'bitnami/kafka:latest'
#    restart: always
#    container_name: 'kafka'
#    depends_on:
#      - zookeeper
#    environment:
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_LOG_RETENTION_HOURS=72
#      - ALLOW_ANONYMOUS_LOGIN=yes
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_ZOOKEEPER_CONNECT=hsp_zookeeper:2181
#    expose:
#      - '9092'
#    volumes:
#      - kafka:/bitnami/kafka
#    networks:
#      hotspotplusgate:
#        ipv4_address: 172.20.0.80
#  radius:
#    image: 'registry.gitlab.com/parmenides/hspfreeradius/production:3.3'
#    restart: always
#    container_name: "hsp_radius_production"
#    logging:
#      driver: none
#    networks:
#      - hotspotplusgate
#    expose:
#      - "1812"
#      - "1813"
#    ports:
#      - "1812:1812/udp"
#      - "1813:1813/udp"

volumes:
  hsp_rabbitmq:
    driver: local
  hsp_mongodb:
    driver: local
  hsp_redis:
    driver: local
  hsp_elasticsearch:
    driver: local
  hsp_kibana:
    driver: local
  kafka:
    driver: local

networks:
  hotspotplusgate:
    external: true