version: '3.6'
services:
  traefik:
    image: traefik:v2.0
    container_name: traefik
    command: --providers.docker=true --entryPoints.web.address=:80  --providers.docker.endpoint="unix:///var/run/docker.sock" --providers.docker.network=hotspotplusgate
    ports:
    - '80:80'
    - '8080:8080'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - hotspotplusgate
  api:
    build:
      context: ${PWD}/api
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    container_name: apihotspotplus
    command: npm run start:dev
    expose:
      - '3000'
    labels:
      - traefik.http.routers.api.rule=( Host(`my.localhotspot.ir`) || Host(`go.localhotspot.ir`)|| Host(`go1.captiveportal.ir`) ) && PathPrefix(`/api/`,`/explorer`)
    #command: npm run build:dev:angular
    depends_on:
      - mongodb
      - redis
    env_file:
      - api/.env
    volumes:
      - ${PWD}/systemId:/systemId
      - ${PWD}/api/server:/usr/src/app/server/
      - ${PWD}/files:/files
      - ${PWD}/api/node_modules:/usr/src/app/node_modules
      - ${PWD}/api/common:/usr/src/app/common/
      - ${PWD}/api/logs:/logs
      - ${PWD}/api/key:/key
    networks:
      - hotspotplusgate
  licensapi:
    build:
      context: ${PWD}/api-license
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    container_name: hotspotpluslicensapi
    labels:
    - traefik.http.routers.lcapi.rule=( Host(`lc.localhotspot.ir`) || Host(`lc.localhotspot.ir`) ) && PathPrefix(`/api/`,`/explorer`)
    command: npm run start:dev
    expose:
     - '3000'
    depends_on:
      - mongodb
#      - elasticsearch
      - redis
    env_file:
      - api-license/.env
    volumes:
      - ${PWD}/api-license/server:/usr/src/app/server/
      - ${PWD}/api-license/node_modules:/usr/src/app/node_modules
      - ${PWD}/api-license/common:/usr/src/app/common/
      - ${PWD}/api-license/logs:/logs
      - ${PWD}/api-license/key:/key
    networks:
      - hotspotplusgate
  logworker:
    build:
      context: ./log-worker
    user: '${UID:-1000}:${GID:-1000}'
    container_name: logworker
    command: npm run start:dev
    environment:
      - REPORT_TEMPLATES_PAHT=/report-templates
      - CLICK_NETFLOW_REPORT_DB=logs.report
      - CLICK_HOST=clickhouse
      - CLICK_USER=admin
      - CLICK_PASSWORD=123
      - ELASTICSEARCH_LOG_LEVEL=debug
      - START_MANUAL_ENRICHMENT=true
      - ENRICHMENT_SCOPE=1000
      - ELASTIC_INDEX_PREFIX=hotspotplus
      - ELASTIC_LICENSE_INDEX_PREFIX=hotspotpluslicense
      - LOG_REQUEST_RETRY_MS=300000
      - API_ADDRESS=http://hotspotplusapi:3000
      - SERVICE_MAN_USERNAME=pinTimeServiceMan
      - SERVICE_MAN_PASSWORD=#123aaa)
      - REDIS_PORT=6379
      - REDIS_HOST=hsp_redis
      - ELASTIC_IP=hsp_elasticsearch
      - ELASTIC_PORT=9200
      - LOG_LEVEL=debug
      - LOG_PATH=/logs/log-worker.log
    volumes:
      - ${PWD}/log-worker/dist/log.worker.js:/usr/src/app/log.worker.js
      - ${PWD}/log-worker/node_modules:/usr/src/app/node_modules
      - ${PWD}/log-worker/report-templates:/report-templates
      - ${PWD}/log-worker/logs:/logs
    networks:
    - hotspotplusgate
  dashboard:
    image: 'bitnami/nginx:latest'
    restart: always
    volumes:
      - ${PWD}/dashboard:/app
    labels:
      - traefik.http.routers.dashboard.rule=Host(`my.localhotspot.ir`)
    expose:
      - '8080'
    networks:
      - hotspotplusgate
  hotspot:
    build:
      context: ${PWD}/api
    user: '${UID:-1000}:${GID:-1000}'
    restart: always
    command: npm start
    labels:
    - traefik.http.routers.hotspot.rule=Host(`go.localhotspot.ir`) || Host(`go1.captiveportal.ir`)
    expose:
    - '8070'
    volumes:
    - ${PWD}/hotspot/:/usr/src/app/
    networks:
    - hotspotplusgate
  licensedashboard:
    image: 'bitnami/nginx:latest'
    restart: always
    labels:
    - traefik.http.routers.lcdashboard.rule=Host(`lc.localhotspot.ir`)
    expose:
    - '8080'
    volumes:
      - ${PWD}/license-dashboard:/app
    networks:
      - hotspotplusgate
  coordinator:
    build:
      context: ${PWD}/coordinator
    user: '${UID:-1000}:${GID:-1000}'
    command: npm start
    restart: always
    env_file:
      - ${PWD}/coordinator/.env
    depends_on:
      - redis
#      - hotspotpluslicensapi
    environment:
      - LOG_LEVEL=debug
      - LOG_DIR=/logs
      - REDIS_PORT=6379
      - REDIS_HOST=hsp_redis
      - REDIS_IP=hsp_redis
    volumes:
      - ${PWD}/coordinator/src/:/usr/src/app/src/
      - ${PWD}/coordinator/node_modules/:/usr/src/app/node_modules/
      - ${PWD}/systemId:/systemId
      - ${PWD}/coordinator/key:/key
      - ${PWD}/coordinator/logs:/logs
    networks:
      - hotspotplusgate
  mongodb:
    container_name: hsp_mongodb
    image: bitnami/mongodb:3.6.8-ol-7-r100
    restart: always
    volumes:
      - hsp_mongodb:/bitnami
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hotspotplusgate
  redis:
    image: bitnami/redis:4.0.12-debian-9-r11
    container_name: hsp_redis
    restart: always
    volumes:
      - hsp_redis:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hotspotplusgate
  clickhouse:
    image: yandex/clickhouse-server
    hostname: clickhouse
    container_name: clickhouse
    ports:
    - 9000:9000
    - 9009:9009
    - 8123:8123
    volumes:
    - ./clickhouse/clickhouse_config.xml:/etc/clickhouse-server/config.xml
    - ./clickhouse/clickhouse_metrika.xml:/etc/clickhouse-server/metrika.xml
    - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
    -  clickhouse:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      hotspotplusgate:
        ipv4_address: 172.20.0.85
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: always
    container_name: 'hsp_zookeeper'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - '2181'
    networks:
      - hotspotplusgate
  kafka:
    image: 'bitnami/kafka:latest'
    restart: always
    container_name: 'kafka'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LOG_RETENTION_HOURS=72
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=hsp_zookeeper:2181
    expose:
      - '9092'
    networks:
      hotspotplusgate:
        ipv4_address: 172.20.0.80
  radius:
    image: 'freeradius/freeradius-server:3.0.19-alpine'
    restart: always
    volumes:
      - ./radius.3.0.19/clients.conf:/etc/raddb/clients.conf
      - ./radius.3.0.19/mods-enabled/rest:/etc/raddb/mods-enabled/rest
      - ./radius.3.0.19/sites-enabled/dynamic-clients:/etc/raddb/sites-enabled/dynamic-clients
      - ./radius.3.0.19/sites-enabled/default:/etc/raddb/sites-enabled/default
    networks:
      - hotspotplusgate
    expose:
      - "1812"
      - "1813"
    ports:
      - "1812:1812"
      - "1813:1813"
    command: -X


volumes:
  hsp_grafana:
    driver: local
  hsp_mongodb:
    driver: local
  hsp_redis:
    driver: local
  kafka:
    driver: local
  clickhouse:
    driver: local

networks:
   hotspotplusgate:
     external: true
